% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compareSpectriPy.R
\name{compareSpectriPy}
\alias{compareSpectriPy}
\alias{CosineGreedyParam}
\alias{CosineHungarianParam}
\alias{ModifiedCosineParam}
\alias{NeutralLossesCosineParam}
\title{Spectra similarity calculations using matchms}
\usage{
CosineGreedyParam(tolerance = 0.1, mzPower = 0, intensityPower = 1)

CosineHungarianParam(tolerance = 0.1, mzPower = 0, intensityPower = 1)

ModifiedCosineParam(tolerance = 0.1, mzPower = 0, intensityPower = 1)

NeutralLossesCosineParam(
  tolerance = 0.1,
  mzPower = 0,
  intensityPower = 1,
  ignorePeaksAbovePrecursor = TRUE
)
}
\arguments{
\item{tolerance}{\code{numeric(1)}: tolerated differences in peaks' m/z. Peaks
with m/z differences \verb{<= tolerance} are considered matching.}

\item{mzPower}{\code{numeric(1)}: the power to raise m/z to in the cosine
function. The default is 0, in which case the peak intensity products will
not depend on the m/z ratios.}

\item{intensityPower}{\code{numeric(1)}: the power to raise intensity to in the
cosine function. The default is 1.}

\item{ignorePeaksAbovePrecursor}{\code{logical(1)}: if \code{TRUE} (the default), peaks
with m/z values larger then the precursor m/z are ignored.}

\item{x}{A \code{\link[=Spectra]{Spectra()}} object.}

\item{y}{A \code{\link[=Spectra]{Spectra()}} object to compare against. If missing spectra
similarities are calculated between all spectr in \code{x}.}
}
\value{
\code{compareSpectriPy} returns a \code{numeric} matrix with the scores,
number of rows being equal to \code{length(x)} and number of columns equal to
\code{length(y)}.
}
\description{
The \code{compareSpectriPy} function allows to calculate spectral similarity
scores using the \verb{calculate_scores module} of the python
\href{https://matchms.readthedocs.io/en/latest/api/matchms.similarity.html}{matchms.similarity package}
package.

Selection and configuration of the algorithm can be performed with one of the
parameter objects:
\itemize{
\item \code{CosineGreedyParam}: calculate the \emph{cosine similarity score} between
spectra. The score is calculated by finding best possible matches between
peaks of two spectra. Two peaks are considered a potential match if their
m/z ratios lie within the given \code{tolerance}. The underlying peak assignment
problem is here solved in a \emph{greedy} way. This can perform notably faster,
but does occasionally deviate slightly from a fully correct solution (as
with the \code{CosineHungarianParam} algorithm). In practice this will rarely
affect similarity scores notably, in particular for smaller tolerances. The
algorithm can be configured with parameters \code{tolerance}, \code{mzPower} and
\code{intensityPower} (see parameter description for more details).
\item \code{CosineHungarianParam}: calculate the \emph{cosine similarity score} as with
\code{CosineGreedyParam}, but using the Hungarian algorithm to find the best
matching peaks between the compared spectra. The algorithm can be
configured with parameters \code{tolerance}, \code{mzPower} and \code{intensityPower}
(see parameter description for more details).
\item \code{ModifiedCosineParam}: The modified cosine score aims at quantifying the
similarity between two mass spectra. The score is calculated by finding
best possible matches between peaks of two spectra. Two peaks are
considered a potential match if their m/z ratios lie within the given
\code{tolerance}, or if their m/z ratios lie within the tolerance once a
mass-shift is applied. The mass shift is simply the difference in
precursor-m/z between the two spectra.
\item \code{NeutralLossesCosineParam}: The neutral losses cosine score aims at
quantifying the similarity between two mass spectra. The score is
calculated by finding best possible matches between peaks of two spectra.
Two peaks are considered a potential match if their m/z ratios lie within
the given \code{tolerance} once a mass-shift is applied. The mass shift is the
difference in precursor-m/z between the two spectra.
}
}
\seealso{
\code{\link[=compareSpectra]{compareSpectra()}} in the \code{Spectra} package for pure R
implementations of spectra similarity calculations.
}
\author{
Carolin Huber, Michael Witting, Johannes Rainer, Helge Hecht
}
